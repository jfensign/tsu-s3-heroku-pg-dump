// Generated by CoffeeScript 1.7.1
(function() {
  var lib, _;

  lib = require('./lib');

  _ = require('underscore');

  (function() {
    var output, shell, to;
    output = [];
    to = 60000;
    shell = lib.heroku.list_dynos();
    shell.stdout.setEncoding = 'utf8';
    shell.stderr.setEncoding = 'utf8';
    shell.stderr.pipe(process.stderr);
    shell.stdout.on('data', function(chunk) {
      return output.push(chunk);
    });
    return shell.stdout.on('close', function() {
      var i, raw, restart_dyno, summary, web, _i, _len, _ref, _results;
      raw = (output.join('')).split('===');
      raw.shift();
      summary = _.extend.apply({}, (function() {
        var _i, _len, _results;
        _results = [];
        for (_i = 0, _len = raw.length; _i < _len; _i++) {
          i = raw[_i];
          _results.push((function(ps) {
            var titular, tmp;
            tmp = {};
            titular = _.first((_.first(ps)).split(':'));
            ps.shift();
            tmp[(titular.split(' '))[1]] = _.compact(ps.map(function(instance) {
              var worker;
              worker = _.first(instance.split(':'));
              if (worker.length > 0) {
                return worker;
              }
            }));
            return tmp;
          })(i.split('\n')));
        }
        return _results;
      })());
      restart_dyno = function(i) {
        return setTimeout((function() {
          var restart;
          console.log('RESTARTING %s', summary.web[i]);
          return restart = lib.heroku.restart_dyno(summary.web[i]);
        }), to * i);
      };
      _ref = summary.web;
      _results = [];
      for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {
        web = _ref[i];
        _results.push(restart_dyno(i));
      }
      return _results;
    });
  })();

}).call(this);
